<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:WPFUI.Controls"
    xmlns:diControls="clr-namespace:WPFUI.DIControls"
    xmlns:diControls1="clr-namespace:WPFUI.Styles.DIControls"
    xmlns:interfaces="clr-namespace:WPFUI.DIControls.Interfaces">

    <Style x:Key="UiBreadcrumbButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextOnAccentFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource ControlElevationBorderBrush}"
                        BorderThickness="0"
                        CornerRadius="4">
                        <ContentPresenter
                            x:Name="Presenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Presenter" Property="TextElement.Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type diControls:Breadcrumb}">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="26" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type diControls:Breadcrumb}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Button
                                x:Name="Button"
                                Grid.Column="0"
                                Command="{Binding OnClickCommand}"
                                Content="{Binding Text}"
                                DataContext="{TemplateBinding Property=FirstNavigationItem}"
                                Style="{StaticResource UiBreadcrumbButton}" />

                            <controls:SymbolIcon
                                x:Name="Icon"
                                Grid.Column="1"
                                Margin="10,0,0,0"
                                FontSize="16"
                                Symbol="ChevronRight24" />
                        </Grid>

                        <ItemsControl
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            ItemsSource="{TemplateBinding NavigationItems}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type interfaces:INavigationItem}">
                                    <diControls1:BreadcrumbItem DataContext="{Binding}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFirstElementActive" Value="True">
                            <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="Button" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="IsFirstElementActive" Value="False">
                            <Setter TargetName="Button" Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource TextFillColorTertiary}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>